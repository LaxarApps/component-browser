{"version":3,"sources":["component-browser-widget.jsx"],"names":[],"mappings":"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","file":"component-browser-widget.js","sourcesContent":["import React from 'react';\n\n/**\n * Copyright 2015 aixigo AG\n * Released under the MIT license\n */\nexport default {\n   name: 'component-browser-widget',\n   injections: [ 'axEventBus', 'axFeatures', 'axReactRender' ],\n   create: function( eventBus, features, reactRender ) {\n\n      const { components: { resource }, details } = features;\n      let origins = [];\n\n      eventBus.subscribe( `didReplace.${resource}`, ({ data }) => {\n         origins = data.origins;\n         render();\n      } );\n\n      return {\n         onDomAvailable: render\n      };\n\n      //////////////////////////////////////////////////////////////////////////\n\n      function render() {\n         const componentsDom = ( components ) =>\n            <ul className='component-browser-components'>\n               { components.map( component =>\n                  <li key={component.name}>\n                     <a href={ component[ 'url-readme' ] }\n                        title={ component.description }\n                        onClick={ event => showDetails( event, component ) }>\n                     { component.name }\n                     </a>\n                  </li>\n               ) }\n            </ul>;\n\n         const groupsDom = ( groups ) =>\n            <ul className='component-browser-groups'>\n               { groups.map( group =>\n                  <li key={group.name} title={group.description}>\n                     <h4>{ group.name }</h4>\n                     { componentsDom( group.components ) }\n                  </li>\n               ) }\n            </ul>;\n\n         const originsDom = () =>\n            <div className='component-browser-origin-container'>{ origins.map( origin =>\n               <ul className='component-browser-origins'>\n                     <li key={origin.name} title={origin.description}>\n                        <h3>{ origin.name }</h3>\n                        { groupsDom( origin.groups ) }\n                     </li>\n               </ul>\n            ) }</div>\n\n         reactRender( originsDom() );\n      }\n\n      //////////////////////////////////////////////////////////////////////////\n\n      function showDetails( event, component ) {\n        if( event.ctrlKey ) {\n          return;\n        }\n        const { resource, action, relation } = details;\n        const data = {\n          _links: { markdown: { href: component[ 'url-' + relation ] } }\n        };\n\n        event.preventDefault();\n        eventBus.publish( `didReplace.${resource}`, { resource, data } )\n          .then( () => eventBus.publish( `takeActionRequest.${action}`, { action } ) );\n      }\n\n   }\n};\n"]}