{"version":3,"sources":["component-list-activity.jsx"],"names":[],"mappings":"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","file":"component-list-activity.js","sourcesContent":["const name = 'component-list-activity';\n/**\n * Copyright 2015 aixigo AG\n * Released under the MIT license\n */\nexport default {\n   name,\n   injections: [ 'axEventBus', 'axFeatures', 'axConfiguration' ],\n   create: function( eventBus, features, configuration ) {\n      const { url, resource } = features.components;\n      Promise.all( [\n         fetch( url ).then( response => response.text() ).then( JSON.parse ).then( rewrite ),\n         new Promise( resolve => { eventBus.subscribe( 'beginLifecycleRequest', resolve ); } )\n      ] ).then( ([ data ]) => {\n         eventBus.publish( `didReplace.${resource}`, { resource, data } );\n      } );\n\n      function rewrite( componentMap ) {\n         const ruleKey = `widgets.${name}.proxies.${features.rewrite.rules}`;\n         const rules = configuration.get( ruleKey, [] );\n\n         componentMap.origins.forEach( origin => {\n            origin.groups.forEach( group => {\n               group.components.forEach( component => {\n                  Object.keys( component ).forEach( key => {\n                     if( key.indexOf( 'url-' ) === 0 ) {\n                        component[ key ] = rules.reduce( applyRule, component[ key ] );\n                     }\n                  } );\n               } );\n            } );\n         } );\n\n         function applyRule( url, rule ) {\n            const { protocol, hostname, port, pathname, search, fragment } = parseUrl( url );\n            if( protocol !== (rule.https ? 'https:' : 'http:') ) {\n               return url;\n            }\n            if( hostname !== rule.host ) {\n               return url;\n            }\n            if( (port || (protocol === 'https:' ? 443 : 80)) !==\n                (rule.port || (rule.https ? 443 : 80)) ) {\n               return url;\n            }\n            const path = reverseRewrite( rule.reverseRewrite || {}, pathname );\n            return `${ path }${ search || '' }${ fragment || '' }`;\n         }\n\n         return componentMap;\n      }\n   }\n};\n\nfunction reverseRewrite( rules, path ) {\n   return Object.keys( rules )\n      .reduce( ( path, pattern ) => {\n         console.log( 'path', path, pattern, rules[ pattern ] ); // :TODO: Delete\n         return path.replace( new RegExp( pattern ), rules[ pattern ] );\n      }, path );\n}\n\nfunction parseUrl( url ) {\n   const a = document.createElement( 'a' );\n   a.href = url;\n   return a;\n}\n"]}